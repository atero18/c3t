// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// distanceInterSymVMat
Rcpp::NumericVector distanceInterSymVMat(const arma::vec& values, const arma::uvec& partition, const Rcpp::NumericMatrix& indexs, const unsigned int& dim, const bool& aDefautDiag, const double& defaultDiag, const Rcpp::String& comp);
RcppExport SEXP _c3t_distanceInterSymVMat(SEXP valuesSEXP, SEXP partitionSEXP, SEXP indexsSEXP, SEXP dimSEXP, SEXP aDefautDiagSEXP, SEXP defaultDiagSEXP, SEXP compSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type partition(partitionSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type indexs(indexsSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< const bool& >::type aDefautDiag(aDefautDiagSEXP);
    Rcpp::traits::input_parameter< const double& >::type defaultDiag(defaultDiagSEXP);
    Rcpp::traits::input_parameter< const Rcpp::String& >::type comp(compSEXP);
    rcpp_result_gen = Rcpp::wrap(distanceInterSymVMat(values, partition, indexs, dim, aDefautDiag, defaultDiag, comp));
    return rcpp_result_gen;
END_RCPP
}
// distanceInterSymMMat
Rcpp::NumericVector distanceInterSymMMat(const arma::mat& values, const arma::uvec& partition, const Rcpp::NumericMatrix& indexs, const Rcpp::String& comp);
RcppExport SEXP _c3t_distanceInterSymMMat(SEXP valuesSEXP, SEXP partitionSEXP, SEXP indexsSEXP, SEXP compSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type partition(partitionSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type indexs(indexsSEXP);
    Rcpp::traits::input_parameter< const Rcpp::String& >::type comp(compSEXP);
    rcpp_result_gen = Rcpp::wrap(distanceInterSymMMat(values, partition, indexs, comp));
    return rcpp_result_gen;
END_RCPP
}
// nearest_neighbor_matrix
Rcpp::NumericVector nearest_neighbor_matrix(const Rcpp::NumericMatrix& distances, const Rcpp::NumericVector& subsetPoints, const Rcpp::NumericVector& subsetNeighbors, const Rcpp::LogicalMatrix& contiguity, const bool& inner);
RcppExport SEXP _c3t_nearest_neighbor_matrix(SEXP distancesSEXP, SEXP subsetPointsSEXP, SEXP subsetNeighborsSEXP, SEXP contiguitySEXP, SEXP innerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type distances(distancesSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type subsetPoints(subsetPointsSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type subsetNeighbors(subsetNeighborsSEXP);
    Rcpp::traits::input_parameter< const Rcpp::LogicalMatrix& >::type contiguity(contiguitySEXP);
    Rcpp::traits::input_parameter< const bool& >::type inner(innerSEXP);
    rcpp_result_gen = Rcpp::wrap(nearest_neighbor_matrix(distances, subsetPoints, subsetNeighbors, contiguity, inner));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_c3t_distanceInterSymVMat", (DL_FUNC) &_c3t_distanceInterSymVMat, 7},
    {"_c3t_distanceInterSymMMat", (DL_FUNC) &_c3t_distanceInterSymMMat, 4},
    {"_c3t_nearest_neighbor_matrix", (DL_FUNC) &_c3t_nearest_neighbor_matrix, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_c3t(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
